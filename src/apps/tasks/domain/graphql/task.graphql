scalar DateTime

enum TaskStatus {
    NEW
    IN_PROGRES
    DONE
    OVERDUE
}

type Task {
    id: Int
    title: String!
    description: String
    status: TaskStatus!
    priority: Int
    deadline: DateTime!
    assignedToId: Int
    createdById: Int
    createdAt: DateTime
}

input CreateTaskInput {
    title: String!
    description: String!
    priority: Int
    deadline: DateTime!
    assignedToId: Int
}

input UpdateTaskInput {
    id: Int!
    title: String!
    description: String!
    priority: Int!
    deadline: DateTime!
    createdAt: DateTime!
}

input UpdateTaskStatusInput {
    id: Int!
    status: TaskStatus!
}

type Query {
    getMyTasks(search: String): [Task]!
    getCreatorTasks(search: String): [Task]!
    getTask(id: Int!): Task
}

type Mutation {
    createTask(createTaskInput: CreateTaskInput!): Task!
    updateTask(updateTaskInput: UpdateTaskInput!): Task!
    updateTaskStatus(updateTaskStatusInput: UpdateTaskStatusInput!): Task!
    removeTask(id: Int!): Task!
}
