enum Role {
  ADMINISTRATOR
  MANAGER
  HEAD_DEPARTMENT
  DEVELOPER
  SALESMAN
}

type User {
  id: Int
  email: String!
  fullName: String
  isActive: Boolean
  departmentId: Int
  role: Role
}

input CreateUserInput {
  email: String!
  password: String!
  fullName: String!
  departmentId: Int
  role: Role
}

input UpdateUserInput {
  id: Int!
  email: String
  name: String
  departmentId: Int
}

input UserFilterQuery {
  isActive: Boolean
  departmentId: Int
}

type Query {
  getUsers(query: UserFilterQuery): [User]!
  getUser(id: Int!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): Boolean
}
